<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.sist.mapper.bookf-mapper">
	<select id="bookfListData" resultType="BookfVO" parameterType="hashmap">
	SELECT no, cno, category, title, poster, price, num
	FROM (SELECT no, category, cno, title, poster, price, rownum as num
	FROM (SELECT no, category, cno, title, poster, price
	FROM book_f WHERE cno=#{cno} ORDER BY no ASC))
	WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<select id="bookfCategoryListData" resultType="BooksCategoryVO">
	select table1.cno, table1.category, table2.count
	from (select distinct cno as cno, category from book_f order by cno asc) table1
	join (select count(category) as count, category from book_f group by category) table2
	on table1.category=table2.category
	order by table1.cno asc
	</select>
	
	<select id="bookfTotalPage" resultType="int" parameterType="int">
	SELECT CEIL(count(*)/9.0) FROM book_f
	WHERE cno = #{cno}
	</select>
	
	<select id="bookfSearchTotalPage" resultType="int" parameterType="String">
	SELECT CEIL(count(*)/9.0) FROM book_f
	WHERE title LIKE '%'||#{sText}||'%'
	</select>
	
	<select id="bookfDetailData" resultType="BookfVO" parameterType="int">
	SELECT no, cno, category, title, poster, author, pudate, publisher, price, bookpage, link, subtitle 
	FROM book_f
	WHERE no = #{no}
	</select>
	
	<select id="bookfReplyData" resultType="BookfReplyVO" parameterType="hashmap">
	SELECT no, name, content, poster, score, num
	FROM (SELECT no, name, content, poster, score, rownum as num
	FROM (SELECT no, name, content, poster, score
	FROM bookf_reply WHERE no=#{no} ORDER BY rno DESC))
	WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<select id="bookfReplyScoreData" resultType="BookfReplyVO" parameterType="int">
	SELECT count(score) as cs
	FROM bookf_reply
	WHERE no=#{no}
	GROUP BY score
	ORDER BY score DESC
	</select>
	
	<select id="bookfReplyTotalPage" resultType="int">
	SELECT CEIL(count(*)/3.0) FROM bookf_reply
	</select>
	
	<select id="bookfReplyAverageData" resultType="int" parameterType="int">
	SELECT NVL(TRUNC(AVG(score),0),1) FROM bookf_reply
	WHERE no=#{no}
	</select>
	
	<insert id="bookfReplyInsert" parameterType="BookfReplyVO">
	INSERT INTO bookf_reply 
	VALUES((SELECT NVL(MAX(rno),0)+1 FROM bookf_reply), #{no}, #{name}, #{content}, #{poster}, #{score})
	</insert>
	
	<select id="bookfSearchList" resultType="BookfVo" parameterType="hashmap">
	SELECT no, cno, category, title, poster, price, num
	FROM (SELECT no, category, cno, title, poster, price, rownum as num
	FROM (SELECT no, category, cno, title, poster, price
	FROM book_f WHERE title LIKE '%'||#{sText}||'%' ORDER BY no ASC))
	WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 찜목록 -->
<select id="BookfJjimListData" resultType="com.sist.vo.BookfJjimVO" parameterType="string">
	SELECT no,cno FROM bookf_jjim
	WHERE id=#{id}
</select>

<select id="BookfJjimCount" resultType="int" parameterType="string">
	SELECT COUNT(*) FROM bookf_jjim
	WHERE id=#{id}
</select>
<insert id="BookfJjimInsert" parameterType="com.sist.vo.BookfJjimVO">
	
	INSERT INTO bookf_jjim
	VALUES(
	(SELECT NVL(MAX(no)+1,1) as no FROM bookf_jjim),
	#{id},
	#{cno}
	)
</insert>
<select id="BookfJjimCheck" resultType="int" parameterType="int">
	SELECT COUNT(*) FROM bookf_jjim
	WHERE cno=#{cno}
</select>
</mapper>
